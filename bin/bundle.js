#!/usr/bin/env node
// Generated by LiveScript 1.6.0
var fs, path, recurse;
fs = require('fs');
path = require('path');
recurse = function(root){
  var cssFile, b64, css, files, i$, len$, file, results$ = [];
  cssFile = path.join(root, "ldif.min.css");
  if (fs.existsSync(cssFile)) {
    console.log("bundle " + cssFile + " ...");
    b64 = fs.readFileSync(path.join(root, "ldif.woff2")).toString('base64');
    css = fs.readFileSync(cssFile).toString();
    css += "@font-face{font-family:'ldi';src:url(data:font/woff2;base64," + b64 + ") format('woff2')}";
    fs.writeFileSync(path.join(root, "index.min.css"), css);
  }
  files = fs.readdirSync(root).map(function(it){
    return path.join(root, it);
  });
  for (i$ = 0, len$ = files.length; i$ < len$; ++i$) {
    file = files[i$];
    if (fs.statSync(file).isDirectory()) {
      results$.push(recurse(file));
    }
  }
  return results$;
};
recurse(path.join(__dirname, '..'));
